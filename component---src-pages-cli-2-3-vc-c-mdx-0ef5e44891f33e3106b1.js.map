{"version":3,"sources":["webpack:///./src/pages/cli/2.3.vc_c.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"+QAMO,IAAMA,EAAe,GAOtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,iBAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,qBACN,MAAS,CACP,SAAY,aAEb,+BAAGC,WAAW,MAAS,CACtB,KAAQ,sBACR,aAAc,+BACd,UAAa,kBACZ,iCAAKA,WAAW,KAAQ,CACvB,cAAe,OACf,UAAa,QACb,OAAU,KACV,QAAW,MACX,QAAW,YACX,MAAS,OACR,kCAAMA,WAAW,OAAU,CAC1B,SAAY,UACZ,EAAK,qVAlBb,sBAoBA,uKAAsJ,0BAAYA,WAAW,KAAvB,UAAtJ,0BACA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,mBADZ,gYAaL,8BACE,iBAAGA,WAAW,cAAd,6GAAyI,0BAAYA,WAAW,KAAvB,MAAzI,2CAAmO,0BAAYA,WAAW,KAAvB,MAAnO,aAEF,iBAAQ,CACN,GAAM,YACN,MAAS,CACP,SAAY,aAEb,+BAAGA,WAAW,MAAS,CACtB,KAAQ,aACR,aAAc,sBACd,UAAa,kBACZ,iCAAKA,WAAW,KAAQ,CACvB,cAAe,OACf,UAAa,QACb,OAAU,KACV,QAAW,MACX,QAAW,YACX,MAAS,OACR,kCAAMA,WAAW,OAAU,CAC1B,SAAY,UACZ,EAAK,qVAlBb,aAoBA,mKAAkJ,0BAAYA,WAAW,KAAvB,cAAlJ,mCAA4O,0BAAYA,WAAW,KAAvB,MAA5O,OAAkS,0BAAYA,WAAW,KAAvB,MAAlS,wFAAya,0BAAYA,WAAW,KAAvB,KAAza,gCAAuf,0BAAYA,WAAW,KAAvB,aAAvf,wCACA,iBAAQ,CACN,GAAM,0BACN,MAAS,CACP,SAAY,aAEb,+BAAGA,WAAW,MAAS,CACtB,KAAQ,2BACR,aAAc,oCACd,UAAa,kBACZ,iCAAKA,WAAW,KAAQ,CACvB,cAAe,OACf,UAAa,QACb,OAAU,KACV,QAAW,MACX,QAAW,YACX,MAAS,OACR,kCAAMA,WAAW,OAAU,CAC1B,SAAY,UACZ,EAAK,qVAlBb,2BAoBA,4RAA2Q,0BAAYA,WAAW,KAAvB,eAA3Q,oCAAuW,0BAAYA,WAAW,KAAvB,mBAAvW,uEACA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,mBADZ,uQAiBL,+DAA8C,0BAAYA,WAAW,KAAvB,oCAA9C,OAAkI,0BAAYA,WAAW,KAAvB,sCAClI,8BACE,iBAAGA,WAAW,cAAd,uFAAmH,0BAAYA,WAAW,KAAvB,aAAnH,0CAMNJ,EAAWK,gBAAiB","file":"component---src-pages-cli-2-3-vc-c-mdx-0ef5e44891f33e3106b1.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/vibranium/vibranium/src/components/Layout.jsx\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"creating-new-tests\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h1\" {...{\n        \"href\": \"#creating-new-tests\",\n        \"aria-label\": \"creating new tests permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Creating new tests`}</h1>\n    <p>{`You can create new tests by simply creating a new json file and adding the required keys, but to make the process more easier, you can use the `}<inlineCode parentName=\"p\">{`create`}</inlineCode>{` command in Vibranium.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`❯ vc c -h                                  \nUsage: vc create|c [options]\n\nCreate a new scenario test file\n\nOptions:\n  -c --collection <collection>  Collection Name\n  -s --scenario <scenario>      Scenario Name\n  -t --template [template]      Create scenario with a template. [t1|t2|t3|e1_github] (default: \"t1\")\n  -h, --help                    output usage information\n`}</code></pre>\n    <blockquote>\n      <p parentName=\"blockquote\">{`While creating tests, you need to specify the collection in which the tests needs to be created using the `}<inlineCode parentName=\"p\">{`-c`}</inlineCode>{` option and the scenario name using the `}<inlineCode parentName=\"p\">{`-s`}</inlineCode>{` option.`}</p>\n    </blockquote>\n    <h2 {...{\n      \"id\": \"templates\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#templates\",\n        \"aria-label\": \"templates permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Templates`}</h2>\n    <p>{`Vibranium provides a set of templates that you can use to create tests. These templates can be used by specifying the template name in the `}<inlineCode parentName=\"p\">{`--template`}</inlineCode>{` option. They are usually named `}<inlineCode parentName=\"p\">{`t1`}</inlineCode>{` to `}<inlineCode parentName=\"p\">{`tn`}</inlineCode>{` where each increment stands for increase in complexity. The templates starting with `}<inlineCode parentName=\"p\">{`e`}</inlineCode>{` are example templates, like `}<inlineCode parentName=\"p\">{`e1_github`}</inlineCode>{` refers to example of github API v3.`}</p>\n    <h3 {...{\n      \"id\": \"user-provided-templates\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h3\" {...{\n        \"href\": \"#user-provided-templates\",\n        \"aria-label\": \"user provided templates permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`User provided Templates`}</h3>\n    <p>{`You can have user provided templates also. If you want to have a standard structure for all your tests, you can create a template json and place it in the templates directory inside the tests directory in your workspace. For example, if I have my workspace at `}<inlineCode parentName=\"p\">{`˜/workspace`}</inlineCode>{` and my tests directory is named `}<inlineCode parentName=\"p\">{`Vibranium-Tests`}</inlineCode>{`, then I'll have a directory structure for my templates as follows:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`˜/\n  workspace/\n    config.json\n    jobs/\n      latest/\n      job_n/\n    logs/\n    Vibranium-Tests/\n      scenarios/\n      payloads/\n      schemas/\n      templates/\n        template_myCustomTemplate.json\n        template_myComplexTemplate.json\n`}</code></pre>\n    <p>{`To use the templates, I can use either `}<inlineCode parentName=\"p\">{`vc c --template myCustomTemplate`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`vc c --template myComplexTemplate`}</inlineCode></p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Make sure the directory structure is correct and that you prefix the templates with `}<inlineCode parentName=\"p\">{`template_`}</inlineCode>{`for user provided templates to work.`}</p>\n    </blockquote>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}