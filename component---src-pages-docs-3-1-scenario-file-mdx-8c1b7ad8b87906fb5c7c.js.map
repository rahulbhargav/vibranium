{"version":3,"sources":["webpack:///./src/pages/docs/3.1.scenario_file.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"kRAMO,IAAMA,EAAe,GAOtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,iBAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,oBACN,MAAS,CACP,SAAY,aAEb,+BAAGC,WAAW,MAAS,CACtB,KAAQ,qBACR,aAAc,8BACd,UAAa,kBACZ,iCAAKA,WAAW,KAAQ,CACvB,cAAe,OACf,UAAa,QACb,OAAU,KACV,QAAW,MACX,QAAW,YACX,MAAS,OACR,kCAAMA,WAAW,OAAU,CAC1B,SAAY,UACZ,EAAK,qVAlBb,qBAoBA,qHACA,+KACA,iBAAQ,CACN,GAAM,iBACN,MAAS,CACP,SAAY,aAEb,+BAAGA,WAAW,MAAS,CACtB,KAAQ,kBACR,aAAc,2BACd,UAAa,kBACZ,iCAAKA,WAAW,KAAQ,CACvB,cAAe,OACf,UAAa,QACb,OAAU,KACV,QAAW,MACX,QAAW,YACX,MAAS,OACR,kCAAMA,WAAW,OAAU,CAC1B,SAAY,UACZ,EAAK,qVAlBb,kBAoBA,sBACE,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,MAApB,+GACA,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,SAApB,+FACA,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,cAApB,iFACA,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,OAApB,2FACA,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,QAApB,0JACA,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,QAApB,yGACA,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,UAApB,+FACA,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,wBAApB,oEACA,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,WAApB,gHAA2L,kBAAIA,WAAW,MACtM,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,mBAApB,oGACA,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,kBAApB,mGACA,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,eAApB,mGACA,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,cAApB,mGACA,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,iBAApB,qGAEJ,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,YAApB,kGAA8K,kBAAIA,WAAW,MACzL,kBAAIA,WAAW,MAAf,kEAEJ,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,aAApB,0CAwDF,iBAAQ,CACN,GAAM,kBACN,MAAS,CACP,SAAY,aAEb,+BAAGA,WAAW,MAAS,CACtB,KAAQ,mBACR,aAAc,4BACd,UAAa,kBACZ,iCAAKA,WAAW,KAAQ,CACvB,cAAe,OACf,UAAa,QACb,OAAU,KACV,QAAW,MACX,QAAW,YACX,MAAS,OACR,kCAAMA,WAAW,OAAU,CAC1B,SAAY,UACZ,EAAK,qVAlBb,mBAoBA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,2mPA6MTJ,EAAWK,gBAAiB","file":"component---src-pages-docs-3-1-scenario-file-mdx-8c1b7ad8b87906fb5c7c.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/vibranium/vibranium/src/components/Layout.jsx\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"the-scenario-file\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h1\" {...{\n        \"href\": \"#the-scenario-file\",\n        \"aria-label\": \"the scenario file permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`The Scenario File`}</h1>\n    <p>{`The scenario file is just a combination of one or more endpoints grouped together in a file.`}</p>\n    <p>{`A scenario can refer to any group, like all APIs for one entity, all endpoints doing an end to end flow or even all internal/external apis separately.`}</p>\n    <h2 {...{\n      \"id\": \"important-keys\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#important-keys\",\n        \"aria-label\": \"important keys permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Important keys`}</h2>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`id`}</inlineCode>{` `}{`[string]`}{`: This is an auto generated ID for the scenario file. Do not change this once it is created.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`email`}</inlineCode>{` `}{`[string]`}{`: The email of the user creating the scenario. Used to mail scenario reports`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`created_on`}</inlineCode>{` `}{`[string]`}{`: A timestamp string to represent when the schema was created.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`app`}</inlineCode>{` `}{`[string]`}{`: The App name or code to represent to which app the scenario belongs to`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`name`}</inlineCode>{` `}{`[string]`}{`: The scenario name. This should be unique in the collection and is recommended to name it as the JSON file name, without the extension`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`tags`}</inlineCode>{` `}{`[string]`}{`: An optional set of tags associated with the schema. Can be used for filtering tests.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`ignore`}</inlineCode>{` `}{`[boolean]`}{`: If set to true, the scenario will be skipped/ignored while running tests.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`additionalProperties`}</inlineCode>{` `}{`[object]`}{`: Additional properties for the scenario, if any.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`scripts`}</inlineCode>{` `}{`[object]`}{`: This object contains the scripts that should be executed in the life cycle of the execution.`}<ul parentName=\"li\">\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`before-scenario`}</inlineCode>{` `}{`[string]`}{`: The javascript that needs to be executed in the before-scenario life cycle hook`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`after-scenario`}</inlineCode>{` `}{`[string]`}{`: The javascript that needs to be executed in the after-scenario life cycle hook`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`before-each`}</inlineCode>{` `}{`[string]`}{`: The javascript that needs to be executed in the he before-each life cycle hook`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`after-each`}</inlineCode>{` `}{`[string]`}{`: The javascript that needs to be executed in the The after-each life cycle hook`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`after-globals`}</inlineCode>{` `}{`[string]`}{`: The javascript that needs to be executed in the  after-globals life cycle hook`}</li>\n        </ul></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`generate`}</inlineCode>{` `}{`[object]`}{`: The generate object is used to generate global variables for the entire schema`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`The key is the variable name and value is the variable value`}</li>\n        </ul></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`endpoints`}</inlineCode>{` `}{`[array]`}{`: The list of endpoints`}</li>\n    </ul>\n    {\n      /* Generated using \n      let ignoredKeys = [\n       \"$id\",\n       \"examples\",\n       \"additionalItems\",\n       \"default\",\n       \"title\",\n       \"type\",\n       \"required\",\n      ];\n      const getObjectType = (o) => {\n       if (!!o && !!o.type) {\n         if (typeof o.type === \"object\") return `[${o.type.join(\" or \")}]`;\n         else return `[${o.type}]`;\n       }\n       return \"\";\n      };\n      Object.entries(en)\n       .map(([k, v]) => {\n         let lines = [`- \\`${k}\\` ${getObjectType(v)}: ${v.description}`],\n           items = [],\n           properties = [];\n         if (v.items) {\n           items = v.items.map((item) =>\n             item[\".*\"]\n               ? item[\".*\"].description\n               : Object.entries(item)\n                   .filter(\n                     ([k, v]) => !ignoredKeys.includes(k) && typeof v === \"object\"\n                   )\n                   .map(\n                     ([k, v]) =>\n                       `   - \\`${k}\\` ${getObjectType(v)}: ${v.description}`\n                   )\n                   .join(\"\\n\")\n           );\n         } else if (v.properties && typeof v.properties === \"object\") {\n           properties = v.properties[\".*\"]\n             ? [\"    - \" + v.properties[\".*\"].description]\n             : Object.entries(v.properties)\n                 .filter(\n                   ([k, v]) => !ignoredKeys.includes(k) && typeof v === \"object\"\n                 )\n                 .map(\n                   ([k, v]) => `   - \\`${k}\\` ${getObjectType(v)}: ${v.description}`\n                 );\n         }\n          return [...lines, ...items, ...properties].join(\"\\n\");\n       })\n       .join(\"\\n\");\n      \n      on the json below*/\n    }\n    <h2 {...{\n      \"id\": \"scenario-schema\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#scenario-schema\",\n        \"aria-label\": \"scenario schema permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Scenario Schema`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n    \"$schema\": \"http://json-schema.org/draft-06/schema\",\n    \"$id\": \"scenario.json\",\n    \"type\": \"object\",\n    \"title\": \"The scenario schema\",\n    \"description\": \"The Scenario is a JSON containing multiple endpoint tests\",\n    \"required\": [\n        \"id\",\n        \"app\",\n        \"name\",\n        \"email\",\n        \"endpoints\",\n        \"created_on\"\n    ],\n    \"additionalProperties\": false,\n    \"properties\": {\n        \"id\": {\n            \"$id\": \"#/properties/id\",\n            \"type\": \"string\",\n            \"title\": \"The scenario id\",\n            \"description\": \"This is an auto generated ID for the scenario file. Do not change this once it is created.\",\n            \"minLength\": 36,\n            \"examples\": [\n                \"2186ae65-8707-4520-bd0e-0c486670eb56\"\n            ]\n        },\n        \"email\": {\n            \"$id\": \"#/properties/email\",\n            \"type\": \"string\",\n            \"title\": \"The email of the user creating the sceario\",\n            \"description\": \"The email of the user creating the scenario. Used to mail scenario reports\",\n            \"examples\": [\n                \"someone@domain.com\"\n            ]\n        },\n        \"created_on\": {\n            \"$id\": \"#/properties/created_on\",\n            \"type\": \"string\",\n            \"title\": \"The created on time\",\n            \"description\": \"A timestamp string to represent when the schema was created.\",\n            \"examples\": [\n                \"2020-5-7 10:32:3\"\n            ]\n        },\n        \"app\": {\n            \"$id\": \"#/properties/app\",\n            \"type\": \"string\",\n            \"title\": \"The app name/code\",\n            \"description\": \"The App name or code to represent to which app the scenario belongs to\",\n            \"examples\": [\n                \"exampleApp\"\n            ]\n        },\n        \"name\": {\n            \"$id\": \"#/properties/name\",\n            \"type\": \"string\",\n            \"title\": \"The scenario name\",\n            \"description\": \"The scenario name. This should be unique in the collection and is recommended to name it as the JSON file name, without the extension\",\n            \"examples\": [\n                \"scenarioName\"\n            ]\n        },\n        \"tags\": {\n            \"$id\": \"#/properties/tags\",\n            \"type\": \"string\",\n            \"title\": \"The tags assiciated with the schema\",\n            \"description\": \"An optional set of tags associated with the schema. Can be used for filtering tests.\",\n            \"examples\": [\n                \"crud,smoke\"\n            ]\n        },\n        \"ignore\": {\n            \"$id\": \"#/properties/ignore\",\n            \"type\": \"boolean\",\n            \"title\": \"The ignore key\",\n            \"description\": \"If set to true, the scenario will be skipped/ignored while running tests.\",\n            \"default\": false,\n            \"enum\": [\n                true,\n                false\n            ]\n        },\n        \"additionalProperties\": {\n            \"$id\": \"#/properties/additionalProperties\",\n            \"type\": \"object\",\n            \"title\": \"The additionalProperties schema\",\n            \"description\": \"Additional properties for the scenario, if any.\",\n            \"additionalProperties\": true\n        },\n        \"scripts\": {\n            \"$id\": \"#/properties/scripts\",\n            \"type\": \"object\",\n            \"title\": \"The scripts object\",\n            \"description\": \"This object contains the scripts that should be executed in the lifecycle of the execution.\",\n            \"additionalProperties\": false,\n            \"examples\": [\n                {\n                    \"before-scenario\": \"\",\n                    \"after-scenario\": \"\",\n                    \"before-each\": \"\",\n                    \"after-each\": \"\",\n                    \"after-globals\": \"\"\n                }\n            ],\n            \"properties\": {\n                \"before-scenario\": {\n                    \"$id\": \"#/properties/scripts/properties/before-scenario\",\n                    \"type\": \"string\",\n                    \"title\": \"The before-scenario schema\",\n                    \"description\": \"The javascript that needs to be executed in the before-scenario lifecycle hook\",\n                    \"examples\": [\n                        \"logger.log('Lifecycle Hook: before-scenario')\"\n                    ]\n                },\n                \"after-scenario\": {\n                    \"$id\": \"#/properties/scripts/properties/after-scenario\",\n                    \"type\": \"string\",\n                    \"title\": \"The after-scenario schema\",\n                    \"description\": \"The javascript that needs to be executed in the after-scenario lifecycle hook\",\n                    \"examples\": [\n                        \"logger.log('Lifecycle Hook: after-scenario')\"\n                    ]\n                },\n                \"before-each\": {\n                    \"$id\": \"#/properties/scripts/properties/before-each\",\n                    \"type\": \"string\",\n                    \"title\": \"The before-each schema\",\n                    \"description\": \"The javascript that needs to be executed in the he before-each lifecycle hook\",\n                    \"examples\": [\n                        \"logger.log('Lifecycle Hook: before-each')\"\n                    ]\n                },\n                \"after-each\": {\n                    \"$id\": \"#/properties/scripts/properties/after-each\",\n                    \"type\": \"string\",\n                    \"title\": \"The after-each schema\",\n                    \"description\": \"The javascript that needs to be executed in the The after-each lifecycle hook\",\n                    \"examples\": [\n                        \"logger.log('Lifecycle Hook: after-each')\"\n                    ]\n                },\n                \"after-globals\": {\n                    \"$id\": \"#/properties/scripts/properties/after-globals\",\n                    \"type\": \"string\",\n                    \"title\": \"The after-globals schema\",\n                    \"description\": \"The javascript that needs to be executed in the  after-globals lifecycle hook\",\n                    \"examples\": [\n                        \"logger.log('Lifecycle Hook: after-globals')\"\n                    ]\n                }\n            }\n        },\n        \"generate\": {\n            \"$id\": \"#/properties/generate\",\n            \"type\": [\n                \"string\",\n                \"integer\",\n                \"boolean\",\n                \"object\",\n                \"array\"\n            ],\n            \"title\": \"The globals schema\",\n            \"description\": \"The generate object is used to generate global variables for the entire schema\",\n            \"examples\": [\n                {\n                    \"variableName\": \"[a-z0-9 ]{100,200}\",\n                    \"longString\": \"{lorem_5000}\",\n                    \"name\": \"{datasets.name}\"\n                }\n            ],\n            \"additionalProperties\": true,\n            \"properties\": {\n                \".*\": {\n                    \"$id\": \"#/properties/generate/properties/.*\",\n                    \"type\": \"string\",\n                    \"title\": \"variable details\",\n                    \"description\": \"Variable value\",\n                    \"default\": \"\",\n                    \"examples\": [\n                        \"[a-z0-9 ]{100,200}\"\n                    ]\n                }\n            }\n        },\n        \"endpoints\": {\n            \"$id\": \"#/properties/endpoints\",\n            \"type\": \"array\",\n            \"title\": \"The endpoints schema\",\n            \"description\": \"The list of endpoints\",\n            \"additionalItems\": true,\n            \"items\": [\n                {\n                    \"$ref\": \"endpoint.json\"\n                }\n            ]\n        }\n    }\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}