{"version":3,"sources":["webpack:///./src/pages/docs/3.3.variables.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"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","file":"component---src-pages-docs-3-3-variables-mdx-22dccc42224676a8fdb7.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/vibranium/vibranium/src/components/Layout.jsx\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"variables\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h1\" {...{\n        \"href\": \"#variables\",\n        \"aria-label\": \"variables permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Variables`}</h1>\n    <p>{`Vibranium allows us to create and use variables in our tests. Variables in Vibranium are usually enclosed in curly brackets (`}<inlineCode parentName=\"p\">{`{`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`}`}</inlineCode>{`). They can be used to denote data that changes in a payload or response data from other endpoint and so on. They are usually represented in an object format, where the key stands for the variable name, and the value will be the variable value.`}</p>\n    <p>{`A comparison to some programming languages will be like this:`}</p>\n    <p>{`Javascript variables:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`let variable1 = 1,\n    variable2 = 'something',\n    variable3 = true,\n    variable4 = [],\n    variable5 = {\n        hello: 'world'\n    }\n\n// usage:\nvariable1 // 1\nvariable4.length // 0\nvariable5.hello // world\n\n`}</code></pre>\n    <p>{`Vibranium variables:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`\"variables\": {\n    \"variable1\": 1,\n    \"variable2\": \"something\",\n    \"variable3\": true,\n    \"variable4\": [],\n    \"variable5\": {\n        \"hello\": \"world\"\n    }\n}\n\n// usage:\n\"{variable1}\" // 1\n\"{variable4.length}\" // 0\n\"{variable5.hello}\" // world\n\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"levels-of-variable-declaration\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#levels-of-variable-declaration\",\n        \"aria-label\": \"levels of variable declaration permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Levels of variable declaration`}</h2>\n    <p>{`Vibranium allows declaration of variables at multiple levels or scopes.`}</p>\n    <h3 {...{\n      \"id\": \"endpoint-level\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h3\" {...{\n        \"href\": \"#endpoint-level\",\n        \"aria-label\": \"endpoint level permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Endpoint level`}</h3>\n    <p>{`These variables are available in the endpoint scope and are usually declared in the `}<inlineCode parentName=\"p\">{`variables`}</inlineCode>{` key in the endpoint object. Variables that need to be used only in the endpoint are declared here`}</p>\n    <h3 {...{\n      \"id\": \"scenario-level\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h3\" {...{\n        \"href\": \"#scenario-level\",\n        \"aria-label\": \"scenario level permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Scenario level`}</h3>\n    <p>{`These variables are available in the scenario file scope and are declared in the `}<inlineCode parentName=\"p\">{`generate`}</inlineCode>{` key in the endpoint object. Variables that are needed for all or many endpoints in the scenario are declared here.`}</p>\n    <h3 {...{\n      \"id\": \"system-level\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h3\" {...{\n        \"href\": \"#system-level\",\n        \"aria-label\": \"system level permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`System level`}</h3>\n    <p>{`These variables are available in the system scope meaning that any execution happening in the system will have these variables. They are defined in the `}<inlineCode parentName=\"p\">{`config.json`}</inlineCode>{`, inside the `}<inlineCode parentName=\"p\">{`env_vars`}</inlineCode>{` key. `}</p>\n    <h3 {...{\n      \"id\": \"account-level\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h3\" {...{\n        \"href\": \"#account-level\",\n        \"aria-label\": \"account level permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Account level`}</h3>\n    <p>{`These variables are declared per account inside the config file. They are defined in the `}<inlineCode parentName=\"p\">{`config.json`}</inlineCode>{`, inside the `}<inlineCode parentName=\"p\">{`variables`}</inlineCode>{` key in the specific account. `}</p>\n    <h3 {...{\n      \"id\": \"execution-level\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h3\" {...{\n        \"href\": \"#execution-level\",\n        \"aria-label\": \"execution level permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Execution level`}</h3>\n    <p>{`These variables are available in the job execution scope and are passed on to the job using the `}<inlineCode parentName=\"p\">{`--variables`}</inlineCode>{` option while running the tests. These can be used if you need to assign certain values per job.`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Please note that variables can also be created in the `}<inlineCode parentName=\"p\">{`script`}</inlineCode>{` key, but to make them accessible outside the script, you'll have to return the variables object, as mentioned in `}<a parentName=\"p\" {...{\n          \"href\": \"../docs/3.5.scripts.md\"\n        }}>{`Scripts`}</a></p>\n    </blockquote>\n    <h2 {...{\n      \"id\": \"data-parsing-in-variables\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#data-parsing-in-variables\",\n        \"aria-label\": \"data parsing in variables permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Data parsing in variables`}</h2>\n    <p>{`Vibranium uses the dot notation that Javascript uses to parse variables, and in extra to what is available in javascript, we can use some extra keys to easily parse data.\nCommon examples are:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Objects:`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`to key a key `}<inlineCode parentName=\"li\">{`id`}</inlineCode>{` from a variable `}<inlineCode parentName=\"li\">{`user`}</inlineCode>{`, you need to specify `}<inlineCode parentName=\"li\">{`{user.id}`}</inlineCode></li>\n        </ul></li>\n      <li parentName=\"ul\">{`Arrays: `}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`to get n'th element of array, just give the index (eg: `}<inlineCode parentName=\"li\">{`{array.0}`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`{array.10.id}`}</inlineCode>{`)`}</li>\n          <li parentName=\"ul\">{`to get random element from array, use the `}<inlineCode parentName=\"li\">{`any`}</inlineCode>{` keyword (eg: `}<inlineCode parentName=\"li\">{`{array.any}`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`{array.any.id}`}</inlineCode>{`)`}</li>\n          <li parentName=\"ul\">{`to get n random elements from array, use the `}<inlineCode parentName=\"li\">{`any_n`}</inlineCode>{` keyword (eg: `}<inlineCode parentName=\"li\">{`{array.any_2}`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`{array.any_5.id}`}</inlineCode>{`)`}</li>\n          <li parentName=\"ul\">{`to get all elements in array and map it, use the `}<inlineCode parentName=\"li\">{`all`}</inlineCode>{` keyword (eg: `}<inlineCode parentName=\"li\">{`{array.all.id}`}</inlineCode>{` maps an array of objects to an array of string)`}</li>\n          <li parentName=\"ul\">{`to get length of items, use the `}<inlineCode parentName=\"li\">{`length`}</inlineCode>{` keyword (eg: `}<inlineCode parentName=\"li\">{`{array.length}`}</inlineCode>{`)`}</li>\n        </ul></li>\n    </ul>\n    <h2 {...{\n      \"id\": \"inbuilt-variables\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#inbuilt-variables\",\n        \"aria-label\": \"inbuilt variables permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Inbuilt variables`}</h2>\n    <p>{`Vibranium provides a set of inbuilt variables that can be used in your tests. They are categorized as follows:`}</p>\n    <h3 {...{\n      \"id\": \"execution-specific-variables\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h3\" {...{\n        \"href\": \"#execution-specific-variables\",\n        \"aria-label\": \"execution specific variables permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Execution specific variables`}</h3>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`jobId`}</inlineCode>{`: returns the current job execution Id`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"time-variables\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h3\" {...{\n        \"href\": \"#time-variables\",\n        \"aria-label\": \"time variables permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Time variables`}</h3>\n    <p>{`The available variables for specifying time, and the corresponding JavaScript representation are as follows`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`timestamp_n`}</inlineCode>{` returns the timestamp number, `}{`[js: `}<inlineCode parentName=\"li\">{`new Date().getTime()`}</inlineCode>{`]`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`timestamp`}</inlineCode>{` returns the ISO timestamp, `}{`[js: `}<inlineCode parentName=\"li\">{`new Date().toISOString()`}</inlineCode>{`]`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`time`}</inlineCode>{` returns the locale timestamp, `}{`[js: `}<inlineCode parentName=\"li\">{`new Date().toLocaleTimeString()`}</inlineCode>{`]`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`time_ms`}</inlineCode>{` returns the milliseconds, `}{`[js: `}<inlineCode parentName=\"li\">{`new Date().getMilliseconds()`}</inlineCode>{`]`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`time_sec`}</inlineCode>{` returns the seconds, `}{`[js: `}<inlineCode parentName=\"li\">{`new Date().getSeconds()`}</inlineCode>{`]`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`time_min`}</inlineCode>{` returns the minutes, `}{`[js: `}<inlineCode parentName=\"li\">{`new Date().getMinutes()`}</inlineCode>{`]`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`time_hours`}</inlineCode>{` returns the hours, `}{`[js: `}<inlineCode parentName=\"li\">{`new Date().getHours()`}</inlineCode>{`]`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`date`}</inlineCode>{` returns the locale date, `}{`[js: `}<inlineCode parentName=\"li\">{`new Date().toLocaleDateString()`}</inlineCode>{`]`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`date_date`}</inlineCode>{` returns the date, `}{`[js: `}<inlineCode parentName=\"li\">{`new Date().getDate()`}</inlineCode>{`]`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`date_month`}</inlineCode>{` returns the month (number), `}{`[js: `}<inlineCode parentName=\"li\">{`new Date().getMonth()`}</inlineCode>{`]`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`date_month_name_long`}</inlineCode>{` returns the month (full name), `}{`[js: `}<inlineCode parentName=\"li\">{`new Date().toLocaleString('default', { month: 'long' })`}</inlineCode>{`]`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`date_month_name`}</inlineCode>{` returns the month (short name), `}{`[js: `}<inlineCode parentName=\"li\">{`new Date().toLocaleString('default', { month: 'short' })`}</inlineCode>{`]`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`date_year`}</inlineCode>{` returns the year, `}{`[js: `}<inlineCode parentName=\"li\">{`new Date().getFullYear()`}</inlineCode>{`]`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"lorem-ipsum\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h3\" {...{\n        \"href\": \"#lorem-ipsum\",\n        \"aria-label\": \"lorem ipsum permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Lorem Ipsum`}</h3>\n    <p>{`Vibranium has an inbuilt `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.lipsum.com/\"\n      }}>{`Lorem Ipsum`}</a>{` generator. All you need to specify in order to generate a lorem ipsum string of max length `}<inlineCode parentName=\"p\">{`n`}</inlineCode>{` characters is `}<inlineCode parentName=\"p\">{`{lorem_n}`}</inlineCode></p>\n    <h3 {...{\n      \"id\": \"datasets\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h3\" {...{\n        \"href\": \"#datasets\",\n        \"aria-label\": \"datasets permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Datasets`}</h3>\n    <p>{`Vibranium also provides different data sets to be used in tests. All data sets can be used by specifying `}<inlineCode parentName=\"p\">{`{dataset_datasetName}`}</inlineCode>{`, where `}<em parentName=\"p\">{`datasetName`}</em>{` can be any of the following (more to be added later)`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`names`}</inlineCode>{` a random name`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`harrypotter`}</inlineCode>{` a random Harry Potter character name`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`starWars`}</inlineCode>{` a random star wars character name`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`space`}</inlineCode>{` a random celestial object name`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`pokemon`}</inlineCode>{` a random pokemon name (from generation 1)`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`quotes`}</inlineCode>{` a random quote`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`got`}</inlineCode>{` a random Game of Thrones character`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`marvel`}</inlineCode>{` a random Marvel character name`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`spells`}</inlineCode>{` a random Harry Potter spell/charm`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`countries`}</inlineCode>{` a random country name`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"regex-strings\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h3\" {...{\n        \"href\": \"#regex-strings\",\n        \"aria-label\": \"regex strings permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Regex strings`}</h3>\n    <p>{`If you want random characters to be used to fill in values, Vibranium can do that too. All you need to do is specify the regex string for the same.\nLike for example, `}<inlineCode parentName=\"p\">{`[a-z0-9]{5,10}`}</inlineCode>{` can generate any of \"1jdg8sbdsf\", \"7sb6t34\", \"g6s2n\" and so on`}</p>\n    <h2 {...{\n      \"id\": \"examples\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#examples\",\n        \"aria-label\": \"examples permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Examples`}</h2>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Variable declaration`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-js\"\n          }}>{`\n\"hello {world}\" // hello and value of the variable \\`world\\`\n\"{items.length}\" // length of items -> integer\n\"{items}\" // value of items -> can be of any type, depending on \\`items\\`\n\"[a-z]{5}\" // a five letter string with random characters between a-z\n\"[a-zA-Z0-9]{10,15}\" // a 10-15 letter string with any characters from a-z, A-Z or 0-9\ntrue // boolean value true\n{ \"key\": \"{value}\" } // an object with a key 'key' and value as the value in the variable 'value'\n\"{timestamp}\" // current timstamp in ISO format, example: 2020-01-1T12:15:38.666Z\n\"{dataset.names}\" // some random name\n\"{dataset.quotes}\" // some random quote\n\"{dataset.harrypotter} casted {dataset.spells} on {timestamp}\" // eg: Hermione casted Wingardium Leviosa on 2020-01-1T12:15:38.666Z\n\"Job #{jobId}\" // Job #735295637281\n\"{lorem_60}\" // Lorem ipsum dolor sit amet, consectetur adipiscing elit\n\"{lorem_1000}\" // Lorem ipsum with max 1000 characters\n\"/api/v1/users/{userId}\" // same string with {userId} replaced with it's value.\n\n`}</code></pre>\n      </li>\n    </ul>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`JSON parsing`}</p>\n        <p parentName=\"li\">{`Let us assume that we have a variable `}<inlineCode parentName=\"p\">{`v`}</inlineCode>{` with the value as follows`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-json\"\n          }}>{`{\n    \"this\": [\n        \"is\",\n        \"an\"\n    ],\n    \"example\": {\n        \"to\": \"show\",\n        \"how\": [\n            {\n                \"nested\": \"objects\",\n                \"work\": \"and\"\n            },\n            {\n                \"how\": \"deeply\",\n                \"nested\": \"objects\",\n                \"can\": \"be\"\n            }\n        ],\n        \"easily\": \"parsed\"\n    }\n}\n`}</code></pre>\n        <p parentName=\"li\">{`  Now, we have`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-js\"\n          }}>{`- \\`{v}\\`                                // whole json object            \n- \\`{v.this.any}\\`                       // \\`\"is\"\\` or \\`\"an\"\\`             \n- \\`{v.this.all}\\`                       // \\`[ \"is\", \"an\" ]\\`             \n- \\`{v.example.to}\\`                     // \\`\"show\"\\`                     \n- \\`{v.example.how.length}\\`             // \\`2\\`                          \n- \\`{v.example.how.any_1.how}\\`          // \\`undefined\\` or \\`\"deeply\"\\`    \n- \\`{v.example.how.1.can}\\`              // \\`\"be\"\\`                       \n- \\`{v.example.how.any.nested.length}\\`  // \\`7\\` (both values are same)   \n- \\`{v.example.how.all.nested}\\`         // \\`[\"objects\", \"objects\"]\\`     \n- \\`{v.example.how.all.nested.length}\\`  // \\`2\\`               \n`}</code></pre>\n      </li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}