{"version":3,"sources":["webpack:///./src/pages/docs/3.4.dependencies.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"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","file":"component---src-pages-docs-3-4-dependencies-mdx-9f66629c9103a61b7b4b.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/vibranium/vibranium/src/components/Layout.jsx\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"dependencies\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h1\" {...{\n        \"href\": \"#dependencies\",\n        \"aria-label\": \"dependencies permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Dependencies`}</h1>\n    <p>{`One of the most important requirement of any API test or any test in general is to have dependent data/objects available before we write the actual tests. In programming languages like JavaScript/Java this is usually done by writing a reusable data generator function for each module. The advantage Vibranium provides is that any test that you have written before acts as a reusable module for data generation.`}</p>\n    <p>{`Say you have a test object written for creating users and you need users to be available in the system as a dependency in another test, like for example test for assigning users into teams. In this case, all you need to do is mention the users test object in the teams test object as a dependency.`}</p>\n    <h2 {...{\n      \"id\": \"important-keys\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#important-keys\",\n        \"aria-label\": \"important keys permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Important Keys`}</h2>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`collection`}</inlineCode>{` `}{`[string]`}{`: The name of the collection in which the endpoint is available`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`scenario`}</inlineCode>{` `}{`[string]`}{`: The name of the scenario in which the endpoint is available`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`api`}</inlineCode>{` `}{`[string]`}{`: The dependency endpoint name`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`repeat`}</inlineCode>{` `}{`[integer]`}{`: Number of times the endpoint is to be repeated`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`cache`}</inlineCode>{` `}{`[boolean]`}{`: Should the endpoint be cached or loaded from cache?`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`variable`}</inlineCode>{` `}{`[string or object]`}{`: The variable name and path to be parsed from the endpoint response`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`path`}</inlineCode>{` `}{`[string]`}{`: The path from which the variable is to be parsed from the dependency (to be used only if the value of 'variable' key is s string)`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`variables`}</inlineCode>{` `}{`[object]`}{`: The variables to be passed to the dependency`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"reading-values-from-response\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#reading-values-from-response\",\n        \"aria-label\": \"reading values from response permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Reading Values from response`}</h2>\n    <p>{`There are two ways to read data from the response of the dependency, If you need to read just one entry from the response, you can select either of the approaches, but if you need multiple values to be read, only the second approach works.`}</p>\n    <h3 {...{\n      \"id\": \"approach-1-using-variable-and-path\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h3\" {...{\n        \"href\": \"#approach-1-using-variable-and-path\",\n        \"aria-label\": \"approach 1 using variable and path permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Approach 1: using `}<strong parentName=\"h3\">{`variable`}</strong>{` and `}<strong parentName=\"h3\">{`path`}</strong></h3>\n    <p>{`Using this approach, the `}<inlineCode parentName=\"p\">{`variable`}</inlineCode>{` key will be a string and will have the variable name and the `}<inlineCode parentName=\"p\">{`path`}</inlineCode>{` key will have the path to be parsed from response, using dot notation.`}</p>\n    <p>{`Example:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n    \"variable\": \"userId\",\n    \"path\": \"response.id\"\n}\n`}</code></pre>\n    <p>{`The limitation with this approach is that you can read only one value from the response.`}</p>\n    <h3 {...{\n      \"id\": \"approach-2-using-just-variable\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h3\" {...{\n        \"href\": \"#approach-2-using-just-variable\",\n        \"aria-label\": \"approach 2 using just variable permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Approach 2: using just `}<strong parentName=\"h3\">{`variable`}</strong></h3>\n    <p>{`Using this approach, the `}<inlineCode parentName=\"p\">{`variable`}</inlineCode>{` key will be an object and will have the keys as variable names and the values as the paths that need to be parsed,`}</p>\n    <p>{`Example:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n    \"variable\": {\n        \"userIds\": \"response.all.id\",\n        \"userNames\": \"response.all.name\"\n    }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"example\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#example\",\n        \"aria-label\": \"example permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Example`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n    \"name\": \"03.create_an_team\",\n    \"description\": \"Create a new team of a random type\",\n    \"url\": \"/api/v1/teams\",\n    \"method\": \"POST\",\n    \"variables\": {\n        \"visibility\": \"[PRIVATE|PUBLIC]\"\n    },\n    \"payload\": {\n    \"type\": \"{typeCode}\",\n    \"visibility\": \"{visibility}\",\n    \"admins\": \"{userIds}\",\n        \"description\": {\n            \"short\": \"[a-z ]{10, 255}\",\n            \"long\": \"{lorem_500}\"\n        }\n    },\n    \"dependencies\": [\n        {\n            \"api\": \"02.get_all_teams_types\",\n            \"variable\": {\n                \"typeCode\": \"response.any.code\"\n            }\n        },\n        {\n            \"collection\": \"collection_for_user_apis\",\n            \"scenario\": \"users_crud\",\n            \"api\": \"05.create_new_user\",\n            \"repeat\": 5,\n            \"cache\": false,\n            \"variable\": {\n                \"userIds\": \"all.id\",\n                \"userNames\": \"all.name\"\n            }\n        }\n    ]\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}