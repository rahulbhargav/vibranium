(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{yXxa:function(e,n,t){"use strict";t.r(n),t.d(n,"_frontmatter",(function(){return s})),t.d(n,"default",(function(){return o}));t("rGqo"),t("yt8O"),t("Btvt"),t("RW0V"),t("91GP"),t("q1tI");var i=t("7ljp"),a=t("L6Je");var s={},r={_frontmatter:s},p=a.a;function o(e){var n=e.components,t=function(e,n){if(null==e)return{};var t,i,a={},s=Object.keys(e);for(i=0;i<s.length;i++)t=s[i],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,["components"]);return Object(i.b)(p,Object.assign({},r,t,{components:n,mdxType:"MDXLayout"}),Object(i.b)("h1",{id:"the-endpoint-object",style:{position:"relative"}},Object(i.b)("a",Object.assign({parentName:"h1"},{href:"#the-endpoint-object","aria-label":"the endpoint object permalink",className:"anchor before"}),Object(i.b)("svg",Object.assign({parentName:"a"},{"aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"}),Object(i.b)("path",Object.assign({parentName:"svg"},{fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"})))),"The Endpoint Object"),Object(i.b)("h2",{id:"important-keys",style:{position:"relative"}},Object(i.b)("a",Object.assign({parentName:"h2"},{href:"#important-keys","aria-label":"important keys permalink",className:"anchor before"}),Object(i.b)("svg",Object.assign({parentName:"a"},{"aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"}),Object(i.b)("path",Object.assign({parentName:"svg"},{fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"})))),"Important keys"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"name")," ","[string]",": The Endpoint/API name"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"description")," ","[string]",": An explanation about the purpose of this instance."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"url")," ","[string]",": API/Endpoint URL. Should be a continuation of whatever api url is defined in the config.json"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"method")," ","[string]",": The HTTP request method to be used"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"payload")," ","[object or array or string]",": The request payload. Can be any of any type. If the payload is defined as a JSON in the payloads directory, then the payload value will be a string starting with '!' and then the path to the json inside the payload directory"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"language")," ","[string]",": The language in which the endpoint should be called. Used to set the Accept-Language header"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"headers")," ","[object]",": Extra headers to be passed on to the endpoint execution.",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"The extra header content to be passed on to the endpoint execution. The key is the header hey and value is the header value."))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"ignore")," ","[boolean]",": If set to true, the endpoint will be skipped/ignored while running tests."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"cache")," ","[boolean]",": If set to true, the response will be cached throughout the execution"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"system")," ","[string]",": The name of the system to be used for executing this endpoint. The name should be one of the systems defined inside the config.json"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"async")," ","[boolean]",": If set to true, all endpoints with this flag set to true will run synchronously"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"delay")," ","[integer]",": Delay the start of the execution by given time in milliseconds. This applies only for the first repetition."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"timeout")," ","[integer]",": Timeout for the execution. If the endpoint takes more than the given time, it fails."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"repeat")," ","[integer]",": The number of times this endpoint execution should repeat"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"repeat-delay")," ","[integer]",": The delay between each repetition in milliseconds, if 'repeat' or 'repeat-until' key is specified"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"repeat-until")," ","[object]",": Repeat the endpoint execution until the assertions are met.",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"status")," ","[integer]",": The expected status"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"headers")," ","[object]",": Validate the response headers. The key is the header name and value is the expected value"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"response")," ","[object]",": Validate the response body. The key is the test name and value is the assertion script."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"timing")," ","[object]",": Validate the time taken by the endpoint to respond. The key refers to the timing property and value is a JS comparison"))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"variables")," ","[object]",": The variables to be passes to the dependency",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"The key is the variable name and value is the variable value"))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"expect")," ","[object]",": An explanation about the purpose of this instance.",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"status")," ","[integer]",": The expected status"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"headers")," ","[object]",": Validate the response headers. The key is the header name and value is the expected value"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"response")," ","[object]",": Validate the response body. The key is the test name and value is the assertion script."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"timing")," ","[object]",": Validate the time taken by the endpoint to respond. The key refers to the timing property and value is a JS comparison"))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"dependencies")," ","[array]",": The list of dependencies for the endpoint",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"collection")," ","[string]",": The name of the collection in which the endpoint is available"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"scenario")," ","[string]",": The name of the scenario in which the endpoint is available"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"api")," ","[string]",": The dependency endpoint name"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"repeat")," ","[integer]",": Number of times the endpoint is to be repeated"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"cache")," ","[boolean]",": Should the endpoint be cached or loaded from cache?"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"variable")," ","[string or object]",": The variable name and path to be parsed from the endpoint response"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"path")," ","[string]",": The path from which the variable is to be parsed from the dependency (to be used only if the value of 'variable' key is s string)"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"variables")," ","[object]",": The variables to be passed to the dependency"))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"scripts")," ","[object]",": Scripts to be executed in the endpoint life cycle.",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"before-endpoint")," ","[string]",": The script to be executed in the before-endpoint life cycle hook of the endpoint."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"after-endpoint")," ","[string]",": The script to be executed in the after-endpoint life cycle hook of the endpoint."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"after-dependencies")," ","[string]",": The script to be executed in the after-dependencies life cycle hook of the endpoint.")))),Object(i.b)("h2",{id:"endpoint-schema",style:{position:"relative"}},Object(i.b)("a",Object.assign({parentName:"h2"},{href:"#endpoint-schema","aria-label":"endpoint schema permalink",className:"anchor before"}),Object(i.b)("svg",Object.assign({parentName:"a"},{"aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"}),Object(i.b)("path",Object.assign({parentName:"svg"},{fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"})))),"Endpoint Schema"),Object(i.b)("pre",null,Object(i.b)("code",Object.assign({parentName:"pre"},{className:"language-json"}),'{\n    "$schema": "http://json-schema.org/draft-06/schema",\n    "$id": "endpoint.json",\n    "type": "object",\n    "title": "The Endpoint object",\n    "description": "The Endpoint object schema",\n    "examples": [\n        {\n            "url": "/api/v1/test",\n            "description": "Sample API",\n            "name": "sample_api"\n        }\n    ],\n    "required": [\n        "name",\n        "url"\n    ],\n    "properties": {\n        "name": {\n            "$id": "#/properties/name",\n            "type": "string",\n            "title": "The endpoint name",\n            "description": "The Endpoint/API name",\n            "examples": [\n                "get_all_users"\n            ]\n        },\n        "description": {\n            "$id": "#/properties/description",\n            "type": "string",\n            "title": "The description schema",\n            "description": "An explanation about the purpose of this instance.",\n            "examples": [\n                "Get all the users from the system"\n            ]\n        },\n        "url": {\n            "$id": "#/properties/url",\n            "type": "string",\n            "title": "The endpoint url",\n            "description": "API/Endpoint URL. Should be a continuation of whatever api url is defined in the config.json",\n            "examples": [\n                "/api/v1/users"\n            ]\n        },\n        "method": {\n            "$id": "#/properties/method",\n            "type": "string",\n            "title": "The request method",\n            "description": "The HTTP request method to be used",\n            "enum": [\n                "GET",\n                "PUT",\n                "POST",\n                "PATCH",\n                "DELETE"\n            ]\n        },\n        "payload": {\n            "$id": "#/properties/payload",\n            "type": [\n                "object",\n                "array",\n                "string"\n            ],\n            "title": "The payload schema",\n            "description": "The request payload. Can be any of any type. If the payload is defined as a JSON in the payloads directory, then the payload value will be a string starting with \'!\' and then the path to the json inside the payload directory",\n            "examples": [\n                {\n                    "hello": "world"\n                },\n                "string payload",\n                "!collectionName/payloadName"\n            ],\n            "additionalProperties": true\n        },\n        "language": {\n            "$id": "#/properties/language",\n            "type": "string",\n            "title": "The endpoint accept-language header",\n            "description": "The language in which the endpoint should be called. Used to set the Accept-Language header",\n            "examples": [\n                "en",\n                "de"\n            ]\n        },\n        "headers": {\n            "$id": "#/properties/headers",\n            "type": "object",\n            "title": "The endpoint headers",\n            "description": "Extra headers to be passed on to the endpoint execution.",\n            "examples": [\n                {\n                    "Accept-Language": "en"\n                }\n            ],\n            "properties": {\n                ".*": {\n                    "$id": "#/properties/headers/.*",\n                    "type": "string",\n                    "title": "The header content",\n                    "description": "The extra header content to be passed on to the endpoint execution. The key is the header hey and value is the header value.",\n                    "examples": [\n                        "application/json"\n                    ]\n                }\n            }\n        },\n        "ignore": {\n            "$id": "#/properties/ignore",\n            "type": "boolean",\n            "title": "The ignore key",\n            "description": "If set to true, the endpoint will be skipped/ignored while running tests.",\n            "default": false,\n            "enum": [\n                true,\n                false\n            ]\n        },\n        "cache": {\n            "$id": "#/properties/cache",\n            "type": "boolean",\n            "title": "Enable caching",\n            "description": "If set to true, the response will be cached throughout the excecution",\n            "default": false,\n            "enum": [\n                true,\n                false\n            ]\n        },\n        "system": {\n            "$id": "#/properties/system",\n            "type": "string",\n            "title": "System to be used",\n            "description": "The name of the system to be used for executing this endpoint. The name should be one of the systems defined inside the config.json",\n            "examples": [\n                "default"\n            ]\n        },\n        "async": {\n            "$id": "#/properties/async",\n            "type": "boolean",\n            "title": "The async schema",\n            "description": "If set to true, all endpoints with this flag set to true will run synchronously",\n            "default": false,\n            "enum": [\n                true,\n                false\n            ]\n        },\n        "timeout": {\n            "$id": "#/properties/timeout",\n            "type": "integer",\n            "title": "The timeout schema",\n            "description": "Timeout for the execution. If the endpoint takes more than the given time, it fails.",\n            "default": 120000,\n            "examples": [\n                5000\n            ]\n        },\n        "delay": {\n            "$id": "#/properties/delay",\n            "type": "integer",\n            "title": "The delay schema",\n            "description": "Delay the start of the execution by given time in milliseconds. This applies only for the first repetition.",\n            "default": 0,\n            "examples": [\n                5000\n            ]\n        },\n        "repeat": {\n            "$id": "#/properties/repeat",\n            "type": "integer",\n            "title": "The repeat schema",\n            "description": "The number of times this endpoint execution should repeat",\n            "default": 1,\n            "examples": [\n                10\n            ]\n        },\n        "repeat-delay": {\n            "$id": "#/properties/repeat-delay",\n            "type": "integer",\n            "title": "The repeat-delay schema",\n            "description": "The delay between each repetition in milliseconds, if \'repeat\' or \'repeat-until\' key is specified",\n            "default": 0,\n            "examples": [\n                5000\n            ]\n        },\n        "repeat-until": {\n            "$id": "#/properties/repeat-until",\n            "type": "object",\n            "title": "The repeat-until schema",\n            "description": "Repeat the endpoint execution until the assertions are met.",\n            "default": {\n                "status": 200\n            },\n            "additionalProperties": false,\n            "properties": {\n                "status": {\n                    "$id": "#/properties/repeat-until/properties/status",\n                    "type": "integer",\n                    "title": "The status schema",\n                    "description": "The expected status",\n                    "default": 200,\n                    "examples": [\n                        200,\n                        201,\n                        400\n                    ]\n                },\n                "headers": {\n                    "$id": "#/properties/repeat-until/properties/headers",\n                    "type": "object",\n                    "title": "The headers schema",\n                    "description": "Validate the response headers. The key is the header name and value is the expected value",\n                    "examples": [\n                        {\n                            "content-type": "application/json"\n                        }\n                    ],\n                    "properties": {\n                        ".*": {\n                            "$id": "#/properties/repeat-until/properties/headers/properties/.*",\n                            "type": "string",\n                            "title": "The header key",\n                            "description": "Response header key",\n                            "examples": [\n                                "application/json"\n                            ]\n                        }\n                    }\n                },\n                "response": {\n                    "$id": "#/properties/repeat-until/properties/response",\n                    "type": "object",\n                    "title": "The response schema",\n                    "description": "Validate the response body. The key is the test name and value is the assertion script.",\n                    "examples": [\n                        {\n                            "All users have an ID of 36 characters": "{response.all.id}.every(id => id.length === 36)",\n                            "There should be more than 1 users": "{response.length} > 1",\n                            "Atleast one user should be admin": "{response.all.isAdmin}.filter(isAdmin => isAdmin).length === 0"\n                        }\n                    ],\n                    "additionalProperties": true,\n                    "properties": {\n                        "schema": {\n                            "$id": "#/properties/repeat-until/properties/response/properties/schema",\n                            "type": "string",\n                            "title": "The expected schema",\n                            "description": "The expected response schema JSON file path. The file should be under schemas directory in the test directory.",\n                            "examples": [\n                                "!collectionName/schemaName"\n                            ]\n                        },\n                        ".*": {\n                            "$id": "#/properties/repeat-until/properties/response/properties/.*",\n                            "type": "string",\n                            "title": "The expected test name",\n                            "description": "The assertion to be done. The key is the test name and value is the assertion script.",\n                            "default": "",\n                            "examples": [\n                                "{response.length} > 1",\n                                "{response.all.isAdmin}.filter(isAdmin => isAdmin).length === 0",\n                                "{response.all.id}.every(id => id.length === 36)"\n                            ]\n                        }\n                    }\n                },\n                "timing": {\n                    "$id": "#/properties/repeat-until/properties/timing",\n                    "type": "object",\n                    "title": "The timing schema",\n                    "description": "Validate the time taken by the endpoint to respond. The key refers to the timing property and value is a JS comparison",\n                    "examples": [\n                        {\n                            "total": "<700",\n                            "firstByte": "<300"\n                        }\n                    ],\n                    "enum": [\n                        "total",\n                        "firstByte",\n                        "download",\n                        "dns",\n                        "wait",\n                        "tcp"\n                    ],\n                    "additionalProperties": false,\n                    "properties": {\n                        ".*": {\n                            "$id": "#/properties/repeat-until/properties/timing/properties/.*",\n                            "type": "string",\n                            "title": "The total schema",\n                            "description": "The time validation",\n                            "default": "",\n                            "examples": [\n                                "<700"\n                            ]\n                        }\n                    }\n                }\n            },\n            "additionalPropeties": false\n        },\n        "variables": {\n            "$id": "#/properties/variables",\n            "type": "object",\n            "title": "The variables schema",\n            "description": "The variables to be passes to the dependency",\n            "examples": [\n                {\n                    "userId": "userId",\n                    "password": "[a-zA-Z0-9]{15,30}",\n                    "name": "{dataset.names}",\n                    "quote": "{dataset.quotes}",\n                    "loremIpsum": "{lorem_5000}"\n                }\n            ],\n            "additionalProperties": true,\n            "properties": {\n                ".*": {\n                    "$id": "#/properties/.*",\n                    "type": [\n                        "string",\n                        "integer",\n                        "boolean",\n                        "object",\n                        "array"\n                    ],\n                    "title": "The variable value schema",\n                    "description": "The key is the variable name and value is the variable value",\n                    "examples": [\n                        "[a-zA-Z0-9]{15,30}",\n                        "{dataset.names}",\n                        "{userId}"\n                    ]\n                }\n            }\n        },\n        "expect": {\n            "$id": "#/properties/expect",\n            "type": "object",\n            "title": "The expect schema",\n            "description": "An explanation about the purpose of this instance.",\n            "default": {\n                "status": 200\n            },\n            "additionalProperties": false,\n            "properties": {\n                "status": {\n                    "$id": "#/properties/expect/properties/status",\n                    "type": "integer",\n                    "title": "The status schema",\n                    "description": "The expected status",\n                    "default": 200,\n                    "examples": [\n                        200,\n                        201,\n                        400\n                    ]\n                },\n                "headers": {\n                    "$id": "#/properties/expect/properties/headers",\n                    "type": "object",\n                    "title": "The headers schema",\n                    "description": "Validate the response headers. The key is the header name and value is the expected value",\n                    "examples": [\n                        {\n                            "content-type": "application/json"\n                        }\n                    ],\n                    "properties": {\n                        ".*": {\n                            "$id": "#/properties/expect/properties/headers/properties/.*",\n                            "type": "string",\n                            "title": "The header key",\n                            "description": "Response header key",\n                            "examples": [\n                                "application/json"\n                            ]\n                        }\n                    }\n                },\n                "response": {\n                    "$id": "#/properties/expect/properties/response",\n                    "type": "object",\n                    "title": "The response schema",\n                    "description": "Validate the response body. The key is the test name and value is the assertion script.",\n                    "examples": [\n                        {\n                            "All users have an ID of 36 characters": "{response.all.id}.every(id => id.length === 36)",\n                            "There should be more than 1 users": "{response.length} > 1",\n                            "Atleast one user should be admin": "{response.all.isAdmin}.filter(isAdmin => isAdmin).length === 0"\n                        }\n                    ],\n                    "additionalProperties": true,\n                    "properties": {\n                        "schema": {\n                            "$id": "#/properties/expect/properties/response/properties/schema",\n                            "type": "string",\n                            "title": "The expected schema",\n                            "description": "The expected response schema JSON file path. The file should be under schemas directory in the test directory.",\n                            "examples": [\n                                "!collectionName/schemaName"\n                            ]\n                        },\n                        ".*": {\n                            "$id": "#/properties/expect/properties/response/properties/.*",\n                            "type": "string",\n                            "title": "The expected test name",\n                            "description": "The assertion to be done. The key is the test name and value is the assertion script.",\n                            "default": "",\n                            "examples": [\n                                "{response.length} > 1",\n                                "{response.all.isAdmin}.filter(isAdmin => isAdmin).length === 0",\n                                "{response.all.id}.every(id => id.length === 36)"\n                            ]\n                        }\n                    }\n                },\n                "timing": {\n                    "$id": "#/properties/expect/properties/timing",\n                    "type": "object",\n                    "title": "The timing schema",\n                    "description": "Validate the time taken by the endpoint to respond. The key refers to the timing property and value is a JS comparison",\n                    "examples": [\n                        {\n                            "total": "<700",\n                            "firstByte": "<300"\n                        }\n                    ],\n                    "additionalProperties": false,\n                    "properties": {\n                        "total": {\n                            "$id": "#/properties/expect/properties/total",\n                            "type": "string",\n                            "title": "The total schema",\n                            "description": "The validation for total parameter of response timing",\n                            "default": "",\n                            "examples": [\n                                "<700"\n                            ]\n                        },\n                        "firstByte": {\n                            "$id": "#/properties/expect/properties/firstByte",\n                            "type": "string",\n                            "title": "The firstByte schema",\n                            "description": "The validation for firstByte parameter of response timing",\n                            "default": "",\n                            "examples": [\n                                "<700"\n                            ]\n                        },\n                        "download": {\n                            "$id": "#/properties/expect/properties/download",\n                            "type": "string",\n                            "title": "The download schema",\n                            "description": "The validation for download parameter of response timing",\n                            "default": "",\n                            "examples": [\n                                "<700"\n                            ]\n                        },\n                        "dns": {\n                            "$id": "#/properties/expect/properties/dns",\n                            "type": "string",\n                            "title": "The dns schema",\n                            "description": "The validation for dns parameter of response timing",\n                            "default": "",\n                            "examples": [\n                                "<700"\n                            ]\n                        },\n                        "wait": {\n                            "$id": "#/properties/expect/properties/wait",\n                            "type": "string",\n                            "title": "The wait schema",\n                            "description": "The validation for wait parameter of response timing",\n                            "default": "",\n                            "examples": [\n                                "<700"\n                            ]\n                        },\n                        "tcp": {\n                            "$id": "#/properties/expect/properties/tcp",\n                            "type": "string",\n                            "title": "The tcp schema",\n                            "description": "The validation for tcp parameter of response timing",\n                            "default": "",\n                            "examples": [\n                                "<700"\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        "dependencies": {\n            "$id": "#/properties/dependencies",\n            "type": "array",\n            "title": "The dependencies schema",\n            "description": "The list of dependencies for the endpoint",\n            "default": [],\n            "examples": [\n                [\n                    {\n                        "api": "get_team_details",\n                        "variable": "teamId",\n                        "path": "response.any.id"\n                    },\n                    {\n                        "collection": "teams_collection",\n                        "api": "get_team_details",\n                        "scenario": "teams_crud",\n                        "variable": {\n                            "userId": "userId"\n                        }\n                    }\n                ]\n            ],\n            "additionalItems": true,\n            "items": [\n                {\n                    "$id": "#/properties/dependencies/items",\n                    "type": "object",\n                    "required": [\n                        "api",\n                        "variable"\n                    ],\n                    "collection": {\n                        "$id": "#/properties/dependencies/items/anyOf/0/properties/collection",\n                        "type": "string",\n                        "title": "The collection schema",\n                        "description": "The name of the collection in which the endpoint is available",\n                        "examples": [\n                            "teams_collection"\n                        ]\n                    },\n                    "scenario": {\n                        "$id": "#/properties/dependencies/items/anyOf/0/properties/scenario",\n                        "type": "string",\n                        "title": "The scenario schema",\n                        "description": "The name of the scenario in which the endpoint is available",\n                        "examples": [\n                            "teams_crud"\n                        ]\n                    },\n                    "api": {\n                        "$id": "#/properties/dependencies/items/anyOf/0/properties/api",\n                        "type": "string",\n                        "title": "The api schema",\n                        "description": "The dependency endpoint name",\n                        "examples": [\n                            "get_team_details"\n                        ]\n                    },\n                    "repeat": {\n                        "$id": "#/properties/dependencies/items/anyOf/0/properties/repeat",\n                        "type": "integer",\n                        "title": "The repeat schema",\n                        "description": "Number of times the endpoint is to be repeated",\n                        "default": 0,\n                        "examples": [\n                            10\n                        ]\n                    },\n                    "cache": {\n                        "$id": "#/properties/dependencies/items/anyOf/0/properties/cache",\n                        "type": "boolean",\n                        "title": "The cache schema",\n                        "description": "Should the endpoint be cached or loaded from cache?",\n                        "default": false,\n                        "enum": [\n                            true,\n                            false\n                        ]\n                    },\n                    "variable": {\n                        "$id": "#/properties/dependencies/items/anyOf/0/properties/variable",\n                        "type": [\n                            "string",\n                            "object"\n                        ],\n                        "title": "The variable schema",\n                        "description": "The variable name and path to be parsed from the endpoint response",\n                        "examples": [\n                            {\n                                "equList": "response.all.id"\n                            }\n                        ],\n                        "additionalProperties": true,\n                        "properties": {\n                            ".*": {\n                                "$id": "#/properties/dependencies/items/anyOf/0/properties/variable/properties/.*",\n                                "type": "string",\n                                "title": "The variable value schema",\n                                "description": "The key is the variable name and value is the path to parse from response",\n                                "default": "",\n                                "examples": [\n                                    "response.all.id"\n                                ]\n                            }\n                        }\n                    },\n                    "path": {\n                        "$id": "#/properties/dependencies/items/anyOf/0/properties/path",\n                        "type": "string",\n                        "title": "The path schema",\n                        "description": "The path from which the variable is to be parsed from the dependency (to be used only if the value of \'variable\'key is s atring)",\n                        "examples": [\n                            "response.id",\n                            "response.all.name"\n                        ]\n                    },\n                    "variables": {\n                        "$id": "#/properties/dependencies/items/anyOf/0/properties/variables",\n                        "type": "object",\n                        "title": "The variables schema",\n                        "description": "The variables to be passed to the dependency",\n                        "examples": [\n                            {\n                                "userId": "userId",\n                                "password": "[a-zA-Z0-9]{15,30}",\n                                "name": "{dataset.names}",\n                                "quote": "{dataset.quotes}",\n                                "loremIpsum": "{lorem_5000}"\n                            }\n                        ],\n                        "additionalProperties": true,\n                        "properties": {\n                            "*": {\n                                "$id": "#/properties/dependencies/items/anyOf/0/properties/variables/properties/.*",\n                                "type": "string",\n                                "title": "The variable value schema",\n                                "description": "The key is the variable name and value is the variable value",\n                                "examples": [\n                                    "[a-zA-Z0-9]{15,30}",\n                                    "{dataset.names}",\n                                    "{userId}"\n                                ]\n                            }\n                        }\n                    }\n                }\n            ]\n        },\n        "scripts": {\n            "$id": "#/properties/scripts",\n            "type": "object",\n            "title": "The scripts schema",\n            "description": "Scripts to be executed in the endpoint lifecycle.",\n            "default": {},\n            "examples": [\n                {\n                    "after-endpoint": "logger.log(\'Lifecycle Hook: after-endpoint\')",\n                    "before-endpoint": "logger.log(\'Lifecycle Hook: before-endpoint\')",\n                    "after-dependencies": "logger.log(\'Lifecycle Hook: after-dependencies\')"\n                }\n            ],\n            "additionalProperties": false,\n            "properties": {\n                "before-endpoint": {\n                    "$id": "#/properties/scripts/properties/before-endpoint",\n                    "type": "string",\n                    "title": "The before-endpoint schema",\n                    "description": "The script to be executed in the before-endpoint lifecycle hook of the endpoint.",\n                    "examples": [\n                        "logger.log(\'Lifecycle Hook: before-endpoint\')"\n                    ]\n                },\n                "after-endpoint": {\n                    "$id": "#/properties/scripts/properties/after-endpoint",\n                    "type": "string",\n                    "title": "The after-endpoint schema",\n                    "description": "The script to be executed in the after-endpoint lifecycle hook of the endpoint.",\n                    "examples": [\n                        "logger.log(\'Lifecycle Hook: after-endpoint\')"\n                    ]\n                },\n                "after-dependencies": {\n                    "$id": "#/properties/scripts/properties/after-dependencies",\n                    "type": "string",\n                    "title": "The after-dependencies schema",\n                    "description": "The script to be executed in the after-dependencies lifecycle hook of the endpoint.",\n                    "examples": [\n                        "logger.log(\'Lifecycle Hook: after-dependencies\')"\n                    ]\n                }\n            }\n        }\n    },\n    "additionalProperties": false\n}\n')))}o.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-docs-3-2-endpoint-object-mdx-caf3b3d6329cf48fc748.js.map