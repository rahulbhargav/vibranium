(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{FCk4:function(e,n,a){"use strict";a.r(n),a.d(n,"_frontmatter",(function(){return r})),a.d(n,"default",(function(){return o}));a("rGqo"),a("yt8O"),a("Btvt"),a("RW0V"),a("91GP"),a("q1tI");var s=a("7ljp"),t=a("L6Je");var r={},i={_frontmatter:r},c=t.a;function o(e){var n=e.components,a=function(e,n){if(null==e)return{};var a,s,t={},r=Object.keys(e);for(s=0;s<r.length;s++)a=r[s],n.indexOf(a)>=0||(t[a]=e[a]);return t}(e,["components"]);return Object(s.b)(c,Object.assign({},i,a,{components:n,mdxType:"MDXLayout"}),Object(s.b)("h2",{id:"simple-example-with-dependency",style:{position:"relative"}},Object(s.b)("a",Object.assign({parentName:"h2"},{href:"#simple-example-with-dependency","aria-label":"simple example with dependency permalink",className:"anchor before"}),Object(s.b)("svg",Object.assign({parentName:"a"},{"aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"}),Object(s.b)("path",Object.assign({parentName:"svg"},{fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"})))),"Simple example with dependency"),Object(s.b)("pre",null,Object(s.b)("code",Object.assign({parentName:"pre"},{className:"language-json"}),'{\n    "name": "update_user_details",\n    "description": "Update user details",\n    "url": "/api/v1/users/{userId}",\n    "method": "PUT",\n    "variables": {\n        "newUserName": "{dataset.names}"\n    },\n    "payload": {\n        "name": "{newUserName}"\n    },\n    "dependencies":[{\n        "api": "create_a_user",\n        "variable": {\n            "userId": "response.id",\n            "oldUserName": "response.name"\n        }\n    }]\n}\n')),Object(s.b)("h2",{id:"simple-example-with-assertions",style:{position:"relative"}},Object(s.b)("a",Object.assign({parentName:"h2"},{href:"#simple-example-with-assertions","aria-label":"simple example with assertions permalink",className:"anchor before"}),Object(s.b)("svg",Object.assign({parentName:"a"},{"aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"}),Object(s.b)("path",Object.assign({parentName:"svg"},{fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"})))),"Simple example with assertions"),Object(s.b)("pre",null,Object(s.b)("code",Object.assign({parentName:"pre"},{className:"language-json"}),'{\n    "id": "f06b299a-82d0-4e27-af7f-8b46ca23d7d4",\n    "app": "{appName}",\n    "name": "users_crud2",\n    "endpoints": [\n        {\n            "name": "01_get_all_users",\n            "description": "List all users",\n            "url": "/api/v1/users",\n            "method": "GET",\n            "expect": {\n                "status": 200,\n                "headers": {\n                    "content-type": "application/json"\n                },\n                "response": {\n                    "There should be more than 10 users": "{response.length} > 10",\n                    "Atleast one user should be admin": "{response.all.isAdmin}.filter(isAdmin => isAdmin).length === 0",\n                    "All users have an ID of 32 characters": "{response.all.id}.every(id => id.length === 36)"\n                },\n                "timing": {\n                    "total": "<700",\n                    "firstByte": "<300"\n                }\n            }\n        }\n    ]\n}\n')),Object(s.b)("h2",{id:"datasets-and-variables-usage",style:{position:"relative"}},Object(s.b)("a",Object.assign({parentName:"h2"},{href:"#datasets-and-variables-usage","aria-label":"datasets and variables usage permalink",className:"anchor before"}),Object(s.b)("svg",Object.assign({parentName:"a"},{"aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"}),Object(s.b)("path",Object.assign({parentName:"svg"},{fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"})))),"Datasets and variables usage"),Object(s.b)("pre",null,Object(s.b)("code",Object.assign({parentName:"pre"},{className:"language-json"}),'{\n    "id": "319ac86a-f2d7-4cb4-a7fc-5910fe0154d4",\n    "app": "demo",\n    "name": "users_demo",\n    "endpoints": [\n        {\n            "name": "create_a_user",\n            "description": "Create a new User",\n            "url": "/api/v1/users",\n            "method": "POST",\n            "scripts": {\n                "before-endpoint": "variables.spells = [...new Array(10)].map(() => \'{dataset.spells}\'); return { variables }"\n            },\n            "variables": {\n                "userName": "{dataset.harrypotter}",\n                "password": "[a-zA-Z0-9]{7,15}"\n            },\n            "payload": {\n                "name": "{userName}",\n                "country": "{dataset.countries}",\n                "motto": "{lorem_5000}",\n                "favorites": {\n                    "spells": "{spells}",\n                    "quote": "{dataset.quotes}",\n                    "gameOfThronesCharacter": "{dataset.got}",\n                    "marvelCharacter": "{dataset.marvel}",\n                    "starWarsCharacter": "{dataset.starWars}",\n                    "celestialObject": "{dataset.space}",\n                    "pokemon": "{dataset.pokemon}"\n                }\n            },\n            "expect": {\n                "status": 201\n            }\n        }\n    ]\n}\n')),Object(s.b)("h2",{id:"scripts-lifecycle",style:{position:"relative"}},Object(s.b)("a",Object.assign({parentName:"h2"},{href:"#scripts-lifecycle","aria-label":"scripts lifecycle permalink",className:"anchor before"}),Object(s.b)("svg",Object.assign({parentName:"a"},{"aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"}),Object(s.b)("path",Object.assign({parentName:"svg"},{fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"})))),"Scripts lifecycle"),Object(s.b)("pre",null,Object(s.b)("code",Object.assign({parentName:"pre"},{className:"language-json"}),'{\n    "id": "some unique Id",\n    "app": "exampleApp",\n    "name": "e_scripts_lifecycle",\n    "scripts": {\n        "before-scenario": "logger.log(\'Lifecycle Hook: before-scenario\')",\n        "after-scenario": "logger.log(\'Lifecycle Hook: after-scenario\')",\n        "before-each": "logger.log(\'Lifecycle Hook: before-each\')",\n        "after-each": "logger.log(\'Lifecycle Hook: after-each\')",\n        "after-globals": "logger.log(\'Lifecycle Hook: after-globals\')"\n    },\n    "endpoints": [\n        {\n            "name": "sample_api_for_scripts",\n            "description": "Sample API to show lifecycle hooks",\n            "url": "/api/v1/test",\n            "scripts": {\n                "before-endpoint": "logger.log(\'Lifecycle Hook: before-endpoint\')",\n                "after-endpoint": "logger.log(\'Lifecycle Hook: after-endpoint\')",\n                "after-dependencies": "logger.log(\'Lifecycle Hook: after-dependencies\')"\n            }\n        }\n    ]\n}\n')),Object(s.b)("h2",{id:"github-api-v3-sample-tests",style:{position:"relative"}},Object(s.b)("a",Object.assign({parentName:"h2"},{href:"#github-api-v3-sample-tests","aria-label":"github api v3 sample tests permalink",className:"anchor before"}),Object(s.b)("svg",Object.assign({parentName:"a"},{"aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"}),Object(s.b)("path",Object.assign({parentName:"svg"},{fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"})))),"Github API v3 sample tests"),Object(s.b)("pre",null,Object(s.b)("code",Object.assign({parentName:"pre"},{className:"language-json"}),'{\n    "id": "some unique Id",\n    "app": "exampleApp",\n    "name": "e_github_api_v3_repos_crud",\n    "endpoints": [\n        {\n            "name": "01_get_all_repos",\n            "description": "Load all repositories that the user has access to",\n            "url": "/users/{username}/repos",\n            "method": "GET",\n            "variables": {\n                "username": "sarathm09"\n            },\n            "headers": {\n                "User-Agent": "Vibranium"\n            }\n        },\n        {\n            "name": "02_create_a_repo",\n            "description": "Create a new repository with a random name",\n            "url": "/user/repos",\n            "method": "POST",\n            "payload": {\n                "name": "{repoName}",\n                "description": "{repoDescription}",\n                "homepage": "https://github.com",\n                "private": false,\n                "has_issues": true,\n                "has_projects": true,\n                "has_wiki": true\n            },\n            "variables": {\n                "repoName": "{dataset.names}",\n                "repoDescription": "{dataset.quotes}"\n            },\n            "expect": {\n                "status": 201,\n                "response": {\n                    "Verify that the the repo name is same": "\'{response.name}\' === \'{repoName}\'"\n                }\n            },\n            "headers": {\n                "User-Agent": "Vibranium"\n            }\n        },\n        {\n            "name": "03_delete_a_repo",\n            "description": "Delete a newly created repository",\n            "url": "/repos/{username}/{reponame}",\n            "method": "DELETE",\n            "dependencies": [\n                {\n                    "api": "02_create_a_repo",\n                    "variable": {\n                        "reponame": "name",\n                        "username": "owner.login"\n                    }\n                }\n            ],\n            "expect": {\n                "status": 204\n            },\n            "headers": {\n                "User-Agent": "Vibranium"\n            }\n        }\n    ]\n}\n')))}o.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-docs-3-99-examples-mdx-5b62f6d11e0fba8335d9.js.map