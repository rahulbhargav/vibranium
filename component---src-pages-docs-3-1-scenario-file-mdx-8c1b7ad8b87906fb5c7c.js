(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{"1Dmk":function(e,n,t){"use strict";t.r(n),t.d(n,"_frontmatter",(function(){return r})),t.d(n,"default",(function(){return c}));t("rGqo"),t("yt8O"),t("Btvt"),t("RW0V"),t("91GP"),t("q1tI");var i=t("7ljp"),a=t("L6Je");var r={},o={_frontmatter:r},s=a.a;function c(e){var n=e.components,t=function(e,n){if(null==e)return{};var t,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)t=r[i],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,["components"]);return Object(i.b)(s,Object.assign({},o,t,{components:n,mdxType:"MDXLayout"}),Object(i.b)("h1",{id:"the-scenario-file",style:{position:"relative"}},Object(i.b)("a",Object.assign({parentName:"h1"},{href:"#the-scenario-file","aria-label":"the scenario file permalink",className:"anchor before"}),Object(i.b)("svg",Object.assign({parentName:"a"},{"aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"}),Object(i.b)("path",Object.assign({parentName:"svg"},{fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"})))),"The Scenario File"),Object(i.b)("p",null,"The scenario file is just a combination of one or more endpoints grouped together in a file."),Object(i.b)("p",null,"A scenario can refer to any group, like all APIs for one entity, all endpoints doing an end to end flow or even all internal/external apis separately."),Object(i.b)("h2",{id:"important-keys",style:{position:"relative"}},Object(i.b)("a",Object.assign({parentName:"h2"},{href:"#important-keys","aria-label":"important keys permalink",className:"anchor before"}),Object(i.b)("svg",Object.assign({parentName:"a"},{"aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"}),Object(i.b)("path",Object.assign({parentName:"svg"},{fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"})))),"Important keys"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"id")," ","[string]",": This is an auto generated ID for the scenario file. Do not change this once it is created."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"email")," ","[string]",": The email of the user creating the scenario. Used to mail scenario reports"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"created_on")," ","[string]",": A timestamp string to represent when the schema was created."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"app")," ","[string]",": The App name or code to represent to which app the scenario belongs to"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"name")," ","[string]",": The scenario name. This should be unique in the collection and is recommended to name it as the JSON file name, without the extension"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"tags")," ","[string]",": An optional set of tags associated with the schema. Can be used for filtering tests."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"ignore")," ","[boolean]",": If set to true, the scenario will be skipped/ignored while running tests."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"additionalProperties")," ","[object]",": Additional properties for the scenario, if any."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"scripts")," ","[object]",": This object contains the scripts that should be executed in the life cycle of the execution.",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"before-scenario")," ","[string]",": The javascript that needs to be executed in the before-scenario life cycle hook"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"after-scenario")," ","[string]",": The javascript that needs to be executed in the after-scenario life cycle hook"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"before-each")," ","[string]",": The javascript that needs to be executed in the he before-each life cycle hook"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"after-each")," ","[string]",": The javascript that needs to be executed in the The after-each life cycle hook"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"after-globals")," ","[string]",": The javascript that needs to be executed in the  after-globals life cycle hook"))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"generate")," ","[object]",": The generate object is used to generate global variables for the entire schema",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"The key is the variable name and value is the variable value"))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"endpoints")," ","[array]",": The list of endpoints")),Object(i.b)("h2",{id:"scenario-schema",style:{position:"relative"}},Object(i.b)("a",Object.assign({parentName:"h2"},{href:"#scenario-schema","aria-label":"scenario schema permalink",className:"anchor before"}),Object(i.b)("svg",Object.assign({parentName:"a"},{"aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"}),Object(i.b)("path",Object.assign({parentName:"svg"},{fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"})))),"Scenario Schema"),Object(i.b)("pre",null,Object(i.b)("code",Object.assign({parentName:"pre"},{className:"language-json"}),'{\n    "$schema": "http://json-schema.org/draft-06/schema",\n    "$id": "scenario.json",\n    "type": "object",\n    "title": "The scenario schema",\n    "description": "The Scenario is a JSON containing multiple endpoint tests",\n    "required": [\n        "id",\n        "app",\n        "name",\n        "email",\n        "endpoints",\n        "created_on"\n    ],\n    "additionalProperties": false,\n    "properties": {\n        "id": {\n            "$id": "#/properties/id",\n            "type": "string",\n            "title": "The scenario id",\n            "description": "This is an auto generated ID for the scenario file. Do not change this once it is created.",\n            "minLength": 36,\n            "examples": [\n                "2186ae65-8707-4520-bd0e-0c486670eb56"\n            ]\n        },\n        "email": {\n            "$id": "#/properties/email",\n            "type": "string",\n            "title": "The email of the user creating the sceario",\n            "description": "The email of the user creating the scenario. Used to mail scenario reports",\n            "examples": [\n                "someone@domain.com"\n            ]\n        },\n        "created_on": {\n            "$id": "#/properties/created_on",\n            "type": "string",\n            "title": "The created on time",\n            "description": "A timestamp string to represent when the schema was created.",\n            "examples": [\n                "2020-5-7 10:32:3"\n            ]\n        },\n        "app": {\n            "$id": "#/properties/app",\n            "type": "string",\n            "title": "The app name/code",\n            "description": "The App name or code to represent to which app the scenario belongs to",\n            "examples": [\n                "exampleApp"\n            ]\n        },\n        "name": {\n            "$id": "#/properties/name",\n            "type": "string",\n            "title": "The scenario name",\n            "description": "The scenario name. This should be unique in the collection and is recommended to name it as the JSON file name, without the extension",\n            "examples": [\n                "scenarioName"\n            ]\n        },\n        "tags": {\n            "$id": "#/properties/tags",\n            "type": "string",\n            "title": "The tags assiciated with the schema",\n            "description": "An optional set of tags associated with the schema. Can be used for filtering tests.",\n            "examples": [\n                "crud,smoke"\n            ]\n        },\n        "ignore": {\n            "$id": "#/properties/ignore",\n            "type": "boolean",\n            "title": "The ignore key",\n            "description": "If set to true, the scenario will be skipped/ignored while running tests.",\n            "default": false,\n            "enum": [\n                true,\n                false\n            ]\n        },\n        "additionalProperties": {\n            "$id": "#/properties/additionalProperties",\n            "type": "object",\n            "title": "The additionalProperties schema",\n            "description": "Additional properties for the scenario, if any.",\n            "additionalProperties": true\n        },\n        "scripts": {\n            "$id": "#/properties/scripts",\n            "type": "object",\n            "title": "The scripts object",\n            "description": "This object contains the scripts that should be executed in the lifecycle of the execution.",\n            "additionalProperties": false,\n            "examples": [\n                {\n                    "before-scenario": "",\n                    "after-scenario": "",\n                    "before-each": "",\n                    "after-each": "",\n                    "after-globals": ""\n                }\n            ],\n            "properties": {\n                "before-scenario": {\n                    "$id": "#/properties/scripts/properties/before-scenario",\n                    "type": "string",\n                    "title": "The before-scenario schema",\n                    "description": "The javascript that needs to be executed in the before-scenario lifecycle hook",\n                    "examples": [\n                        "logger.log(\'Lifecycle Hook: before-scenario\')"\n                    ]\n                },\n                "after-scenario": {\n                    "$id": "#/properties/scripts/properties/after-scenario",\n                    "type": "string",\n                    "title": "The after-scenario schema",\n                    "description": "The javascript that needs to be executed in the after-scenario lifecycle hook",\n                    "examples": [\n                        "logger.log(\'Lifecycle Hook: after-scenario\')"\n                    ]\n                },\n                "before-each": {\n                    "$id": "#/properties/scripts/properties/before-each",\n                    "type": "string",\n                    "title": "The before-each schema",\n                    "description": "The javascript that needs to be executed in the he before-each lifecycle hook",\n                    "examples": [\n                        "logger.log(\'Lifecycle Hook: before-each\')"\n                    ]\n                },\n                "after-each": {\n                    "$id": "#/properties/scripts/properties/after-each",\n                    "type": "string",\n                    "title": "The after-each schema",\n                    "description": "The javascript that needs to be executed in the The after-each lifecycle hook",\n                    "examples": [\n                        "logger.log(\'Lifecycle Hook: after-each\')"\n                    ]\n                },\n                "after-globals": {\n                    "$id": "#/properties/scripts/properties/after-globals",\n                    "type": "string",\n                    "title": "The after-globals schema",\n                    "description": "The javascript that needs to be executed in the  after-globals lifecycle hook",\n                    "examples": [\n                        "logger.log(\'Lifecycle Hook: after-globals\')"\n                    ]\n                }\n            }\n        },\n        "generate": {\n            "$id": "#/properties/generate",\n            "type": [\n                "string",\n                "integer",\n                "boolean",\n                "object",\n                "array"\n            ],\n            "title": "The globals schema",\n            "description": "The generate object is used to generate global variables for the entire schema",\n            "examples": [\n                {\n                    "variableName": "[a-z0-9 ]{100,200}",\n                    "longString": "{lorem_5000}",\n                    "name": "{datasets.name}"\n                }\n            ],\n            "additionalProperties": true,\n            "properties": {\n                ".*": {\n                    "$id": "#/properties/generate/properties/.*",\n                    "type": "string",\n                    "title": "variable details",\n                    "description": "Variable value",\n                    "default": "",\n                    "examples": [\n                        "[a-z0-9 ]{100,200}"\n                    ]\n                }\n            }\n        },\n        "endpoints": {\n            "$id": "#/properties/endpoints",\n            "type": "array",\n            "title": "The endpoints schema",\n            "description": "The list of endpoints",\n            "additionalItems": true,\n            "items": [\n                {\n                    "$ref": "endpoint.json"\n                }\n            ]\n        }\n    }\n}\n')))}c.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-docs-3-1-scenario-file-mdx-8c1b7ad8b87906fb5c7c.js.map